// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionGenerator.Data;

namespace QuestionGenerator.Data.Migrations
{
    [DbContext(typeof(QuestionDbContext))]
    [Migration("20190413223549_AddMultipleUsers")]
    partial class AddMultipleUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("QuestionGenerator.Domain.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateUsedUTC");

                    b.Property<bool>("PreferredQuestion");

                    b.Property<string>("QuestionText");

                    b.HasKey("QuestionID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuestionGenerator.Domain.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("PasswordHash");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("QuestionGenerator.Domain.UserQuestion", b =>
                {
                    b.Property<int>("UserQuestionID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateSent");

                    b.Property<int>("QuestionID");

                    b.Property<int>("UserID");

                    b.HasKey("UserQuestionID");

                    b.HasIndex("QuestionID");

                    b.HasIndex("UserID");

                    b.ToTable("UserQuestions");
                });

            modelBuilder.Entity("QuestionGenerator.Domain.UserQuestion", b =>
                {
                    b.HasOne("QuestionGenerator.Domain.Question", "Question")
                        .WithMany("UserQuestions")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("QuestionGenerator.Domain.User", "User")
                        .WithMany("UserQuestions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
